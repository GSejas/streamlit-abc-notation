# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: ABC Renderer Checks

on:
  push:
    branches: ["master"]
    paths:
      - ".github/workflows/deploy.yml"
      - "src/**"
      - "tests/**"

permissions:
  contents:  write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13  # Updated Python version
        uses: actions/setup-python@v3
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$HOME/.local/bin:$PATH"
          poetry config virtualenvs.create false  # Ensure Poetry uses the project environment
          poetry --version

      - name: Install dependencies with Poetry
        run: |
          export PATH="$HOME/.local/bin:$PATH"
          poetry install --no-root  # Install all dependencies without installing the root package

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          
      - name: Smoke Tests with pytest
        run: |
          mkdir -p allure-results
          pytest -m smoke  --alluredir allure-results --cov=app --cov-report=html --junitxml=report.xml  tests/endpoint 

      - name: Upload allure report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: allure-results

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov

      - name: Upload flake8 report
        uses: actions/upload-artifact@v3
        with:
          name: flake8-report
          path: flake8_report.txt

      - name: Upload flake8 full report
        uses: actions/upload-artifact@v3
        with:
          name: flake8-full-report
          path: flake8_report_full.txt

      - name: Upload pytest results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results
          path: report.xml


      - name: Deploy allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-results